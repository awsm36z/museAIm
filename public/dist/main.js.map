{"version":3,"sources":["../../node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/commons.js","../../node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../../node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../../node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../../node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/index.js","../../node_modules/@socket.io/component-emitter/lib/esm/index.js","../../node_modules/engine.io-client/build/esm/globals.js","../../node_modules/engine.io-client/build/esm/util.js","../../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../../node_modules/engine.io-client/build/esm/transport.js","../../node_modules/engine.io-client/build/esm/transports/polling.js","../../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../../node_modules/engine.io-client/build/esm/transports/polling-xhr.js","../../node_modules/engine.io-client/build/esm/transports/websocket.js","../../node_modules/engine.io-client/build/esm/transports/webtransport.js","../../node_modules/engine.io-client/build/esm/transports/index.js","../../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../../node_modules/engine.io-client/build/esm/socket.js","../../node_modules/engine.io-client/build/esm/transports/polling-fetch.js","../../node_modules/engine.io-client/build/esm/index.js","../../node_modules/socket.io-client/build/esm/url.js","../../node_modules/socket.io-client/node_modules/socket.io-parser/build/esm/is-binary.js","../../node_modules/socket.io-client/node_modules/socket.io-parser/build/esm/binary.js","../../node_modules/socket.io-client/node_modules/socket.io-parser/build/esm/index.js","../../node_modules/socket.io-client/build/esm/on.js","../../node_modules/socket.io-client/build/esm/socket.js","../../node_modules/socket.io-client/build/esm/contrib/backo2.js","../../node_modules/socket.io-client/build/esm/manager.js","../../node_modules/socket.io-client/build/esm/index.js","../../node_modules/inline-worker/index.js","../../node_modules/recorder-js/lib/microphone.js","../../node_modules/recorder-js/lib/index.js","../../node_modules/recorder-js/index.js","main.js"],"names":["PACKET_TYPES","exports","Object","create","PACKET_TYPES_REVERSE","keys","forEach","key","ERROR_PACKET","type","data","_commons","require","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","TEXT_ENCODER","encodePacketToBinary","packet","arrayBuffer","then","encoded","TextEncoder","encode","chars","lookup","i","length","charCodeAt","arraybuffer","bytes","len","base64","substring","decode","encoded1","encoded2","encoded3","encoded4","bufferLength","p","_base64Arraybuffer","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","decoded","_encodePacket","_decodePacket","SEPARATOR","String","fromCharCode","encodePayload","packets","encodedPackets","Array","count","join","decodePayload","encodedPayload","decodedPacket","push","createPacketEncoderStream","TransformStream","transform","controller","payloadLength","header","DataView","setUint8","view","setUint16","setBigUint64","BigInt","enqueue","TEXT_DECODER","totalLength","chunks","reduce","acc","chunk","concatChunks","size","shift","j","slice","createPacketDecoderStream","maxPayload","TextDecoder","state","expectedLength","isBinary","headerArray","getUint16","n","getUint32","Math","pow","protocol","Emitter","mixin","on","addEventListener","event","fn","_callbacks","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","emitReserved","listeners","hasListeners","nextTick","Promise","resolve","setTimeoutFn","globalThisShim","self","window","Function","defaultBinaryType","createCookieJar","_globalsNode","pick","attr","k","hasOwnProperty","NATIVE_SET_TIMEOUT","globalThis","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","bind","clearTimeoutFn","BASE64_OVERHEAD","utf8Length","ceil","str","c","l","randomString","Date","now","random","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","_engine","_componentEmitter","_util","_parseqs","TransportError","Error","constructor","reason","description","context","Transport","writable","query","socket","forceBase64","onError","open","readyState","doOpen","close","doClose","onClose","send","write","onOpen","onData","onPacket","details","pause","onPause","createUri","schema","_hostname","_port","path","_query","hostname","indexOf","port","secure","Number","encodedQuery","_transport","Polling","_polling","_poll","total","doPoll","doWrite","uri","timestampRequests","timestampParam","sid","b64","value","XMLHttpRequest","err","hasCORS","_hasCors","empty","BaseXHR","location","isSSL","xd","req","request","method","xhrStatus","pollXhr","Request","createRequest","_opts","_method","_uri","_data","undefined","_create","_a","xdomain","xhr","_xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","e","cookieJar","addCookies","withCredentials","requestTimeout","timeout","onreadystatechange","parseCookies","getResponseHeader","status","_onLoad","_onError","document","_index","requestsCount","requests","_cleanup","fromError","abort","responseText","attachEvent","unloadHandler","terminationEvent","hasXHR2","newRequest","responseType","XHR","assign","concat","isReactNative","navigator","product","toLowerCase","BaseWS","protocols","headers","ws","createSocket","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","WebSocketCtor","WebSocket","MozWebSocket","WS","_packet","WT","WebTransport","transportOptions","name","closed","catch","ready","createBidirectionalStream","stream","decoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","pipeTo","_writer","getWriter","read","done","_pollingXhrNode","_websocketNode","_webtransport","transports","websocket","webtransport","polling","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","queryKey","names","$0","$1","$2","_parseuri","withEventListeners","OFFLINE_EVENT_LISTENERS","listener","SocketWithoutUpgrade","writeBuffer","_prevBufferLen","_pingInterval","_pingTimeout","_maxPayload","_pingTimeoutTime","Infinity","parsedUri","_transportsByName","t","transportName","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","_beforeunloadEventListener","transport","_offlineEventListener","_onClose","_cookieJar","_open","createTransport","EIO","id","priorWebsocketSuccess","setTransport","_onDrain","_onPacket","flush","onHandshake","JSON","_sendPacket","_resetPingTimeout","code","pingInterval","pingTimeout","_pingTimeoutTimer","delay","upgrading","_getWritablePackets","payloadSize","_hasPingExpired","hasExpired","msg","options","compress","cleanupAndClose","waitForUpgrade","tryAllTransports","SocketWithUpgrade","_upgrades","_probe","failed","onTransportOpen","cleanup","freezeTransport","error","onTransportClose","onupgrade","to","_filterUpgrades","upgrades","filteredUpgrades","Socket","o","map","DEFAULT_TRANSPORTS","filter","Fetch","_fetch","res","ok","text","isPost","Headers","set","appendCookies","fetch","body","credentials","getSetCookie","_pollingFetch","_pollingXhr","_websocket","url","loc","test","href","withNativeFile","File","hasBinary","toJSON","isArray","_isBinary","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","num","newData","reconstructPacket","_reconstructPacket","_binary","RESERVED_EVENTS","PacketType","Encoder","replacer","EVENT","ACK","encodeAsString","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","stringify","deconstruction","unshift","isObject","Decoder","reviver","add","reconstructor","isBinaryEvent","decodeString","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","substr","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","_on","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_autoConnect","subEvents","subs","onpacket","_readyState","_b","_c","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","isConnected","notifyOutgoingListeners","ackTimeout","timer","withError","emitWithAck","reject","arg1","arg2","tryCount","pending","responseArgs","_drainQueue","force","_sendConnectPacket","_pid","pid","offset","_lastOffset","_clearAcks","some","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","duration","rand","deviation","floor","reset","setMin","setMax","setJitter","parser","_interopRequireWildcard","_backo","_getRequireWildcardCache","WeakMap","r","__esModule","default","has","get","__proto__","a","defineProperty","getOwnPropertyDescriptor","u","Manager","nsps","reconnection","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","encoder","decoder","autoConnect","v","_reconnection","skipReconnect","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","openSubDestroy","errorSub","onping","ondata","ondecoded","active","_destroy","_close","onreconnect","attempt","_url","_manager","_socket2","cache","parsed","sameNamespace","forceNew","multiplex","_recorderJs","_interopRequireDefault","silenceTimeout","audioContext","AudioContext","webkitAudioContext","recorder","Recorder","onAnalysed","console","log","silenceThreshold","silenceDuration","isRecording","startRecording","monitorSilence","stopRecording","stop","_ref","blob","onloadend","audioBuffer","readAsArrayBuffer","analyse","average","sum","log10","requestAnimationFrame","appendMessage","messageElement","createElement","textContent","getElementById","appendChild","voiceButton","resume","mediaDevices","getUserMedia","audio","init","audioBase64","Audio","play"],"mappings":"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","file":"main.js","sourceRoot":"../js","sourcesContent":["const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach((key) => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data.arrayBuffer().then(toArray).then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, (encoded) => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE, } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType),\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType),\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1),\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type],\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET, } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, (encodedPacket) => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, (encodedPacket) => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        },\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* State.READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* State.READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* State.READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* State.READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* State.READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* State.READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else if (state === 2 /* State.READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* State.READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        },\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload, };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\nexport const defaultBinaryType = \"arraybuffer\";\nexport function createCookieJar() { }\n","import { globalThisShim as globalThis } from \"./globals.node.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n/**\n * Generates a random 8-characters string.\n */\nexport function randomString() {\n    return (Date.now().toString(36).substring(3) +\n        Math.random().toString(36).substring(2, 5));\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { randomString } from \"../util.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this._polling = false;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this._poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this._polling || !this.writable) {\n            let total = 0;\n            if (this._polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    _poll() {\n        this._polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this._polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this._poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","import { Polling } from \"./polling.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globals.node.js\";\nimport { hasCORS } from \"../contrib/has-cors.js\";\nfunction empty() { }\nexport class BaseXHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(createRequest, uri, opts) {\n        super();\n        this.createRequest = createRequest;\n        installTimerFunctions(this, opts);\n        this._opts = opts;\n        this._method = opts.method || \"GET\";\n        this._uri = uri;\n        this._data = undefined !== opts.data ? opts.data : null;\n        this._create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    _create() {\n        var _a;\n        const opts = pick(this._opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this._opts.xd;\n        const xhr = (this._xhr = this.createRequest(opts));\n        try {\n            xhr.open(this._method, this._uri, true);\n            try {\n                if (this._opts.extraHeaders) {\n                    // @ts-ignore\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this._opts.extraHeaders) {\n                        if (this._opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this._opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this._method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this._opts.withCredentials;\n            }\n            if (this._opts.requestTimeout) {\n                xhr.timeout = this._opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(\n                    // @ts-ignore\n                    xhr.getResponseHeader(\"set-cookie\"));\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this._onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this._onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this._data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this._onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this._index = Request.requestsCount++;\n            Request.requests[this._index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    _onError(err) {\n        this.emitReserved(\"error\", err, this._xhr);\n        this._cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    _cleanup(fromError) {\n        if (\"undefined\" === typeof this._xhr || null === this._xhr) {\n            return;\n        }\n        this._xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this._xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this._index];\n        }\n        this._xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    _onLoad() {\n        const data = this._xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this._cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this._cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\nconst hasXHR2 = (function () {\n    const xhr = newRequest({\n        xdomain: false,\n    });\n    return xhr && xhr.responseType !== null;\n})();\n/**\n * HTTP long-polling based on the built-in `XMLHttpRequest` object.\n *\n * Usage: browser\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n */\nexport class XHR extends BaseXHR {\n    constructor(opts) {\n        super(opts);\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd }, this.opts);\n        return new Request(newRequest, this.uri(), opts);\n    }\n}\nfunction newRequest(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { pick, randomString } from \"../util.js\";\nimport { encodePacket } from \"engine.io-parser\";\nimport { globalThisShim as globalThis, nextTick } from \"../globals.node.js\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class BaseWS extends Transport {\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws = this.createSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    this.doWrite(packet, data);\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.onerror = () => { };\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\nconst WebSocketCtor = globalThis.WebSocket || globalThis.MozWebSocket;\n/**\n * WebSocket transport based on the built-in `WebSocket` object.\n *\n * Usage: browser, Node.js (since v21), Deno, Bun\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n * @see https://caniuse.com/mdn-api_websocket\n * @see https://nodejs.org/api/globals.html#websocket\n */\nexport class WS extends BaseWS {\n    createSocket(uri, protocols, opts) {\n        return !isReactNative\n            ? protocols\n                ? new WebSocketCtor(uri, protocols)\n                : new WebSocketCtor(uri)\n            : new WebSocketCtor(uri, protocols, opts);\n    }\n    doWrite(_packet, data) {\n        this.ws.send(data);\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"../globals.node.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\n/**\n * WebTransport transport based on the built-in `WebTransport` object.\n *\n * Usage: browser, Node.js (with the `@fails-components/webtransport` package)\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebTransport\n * @see https://caniuse.com/webtransport\n */\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        try {\n            // @ts-ignore\n            this._transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this._transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this._transport.ready.then(() => {\n            this._transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this._writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this._writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this._writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this._transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","import { XHR } from \"./polling-xhr.node.js\";\nimport { WS } from \"./websocket.node.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: XHR,\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 8000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports as DEFAULT_TRANSPORTS } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { createCookieJar, defaultBinaryType, nextTick, } from \"./globals.node.js\";\nconst withEventListeners = typeof addEventListener === \"function\" &&\n    typeof removeEventListener === \"function\";\nconst OFFLINE_EVENT_LISTENERS = [];\nif (withEventListeners) {\n    // within a ServiceWorker, any event handler for the 'offline' event must be added on the initial evaluation of the\n    // script, so we create one single event listener here which will forward the event to the socket instances\n    addEventListener(\"offline\", () => {\n        OFFLINE_EVENT_LISTENERS.forEach((listener) => listener());\n    }, false);\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes without upgrade mechanism, which means that it will keep the first low-level transport that\n * successfully establishes the connection.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithoutUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithoutUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithUpgrade\n * @see Socket\n */\nexport class SocketWithoutUpgrade extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        this._prevBufferLen = 0;\n        this._pingInterval = -1;\n        this._pingTimeout = -1;\n        this._maxPayload = -1;\n        /**\n         * The expiration timestamp of the {@link _pingTimeoutTimer} object is tracked, in case the timer is throttled and the\n         * callback is not fired on time. This can happen for example when a laptop is suspended or when a phone is locked.\n         */\n        this._pingTimeoutTime = Infinity;\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            const parsedUri = parse(uri);\n            opts.hostname = parsedUri.host;\n            opts.secure =\n                parsedUri.protocol === \"https\" || parsedUri.protocol === \"wss\";\n            opts.port = parsedUri.port;\n            if (parsedUri.query)\n                opts.query = parsedUri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = [];\n        this._transportsByName = {};\n        opts.transports.forEach((t) => {\n            const transportName = t.prototype.name;\n            this.transports.push(transportName);\n            this._transportsByName[transportName] = t;\n        });\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        if (withEventListeners) {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this._beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this._offlineEventListener = () => {\n                    this._onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                OFFLINE_EVENT_LISTENERS.push(this._offlineEventListener);\n            }\n        }\n        if (this.opts.withCredentials) {\n            this._cookieJar = createCookieJar();\n        }\n        this._open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new this._transportsByName[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    _open() {\n        if (this.transports.length === 0) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        const transportName = this.opts.rememberUpgrade &&\n            SocketWithoutUpgrade.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1\n            ? \"websocket\"\n            : this.transports[0];\n        this.readyState = \"opening\";\n        const transport = this.createTransport(transportName);\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this._onDrain.bind(this))\n            .on(\"packet\", this._onPacket.bind(this))\n            .on(\"error\", this._onError.bind(this))\n            .on(\"close\", (reason) => this._onClose(\"transport close\", reason));\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        SocketWithoutUpgrade.priorWebsocketSuccess =\n            \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    _onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this._sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    this._resetPingTimeout();\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this._onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this._pingInterval = data.pingInterval;\n        this._pingTimeout = data.pingTimeout;\n        this._maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this._resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    _resetPingTimeout() {\n        this.clearTimeoutFn(this._pingTimeoutTimer);\n        const delay = this._pingInterval + this._pingTimeout;\n        this._pingTimeoutTime = Date.now() + delay;\n        this._pingTimeoutTimer = this.setTimeoutFn(() => {\n            this._onClose(\"ping timeout\");\n        }, delay);\n        if (this.opts.autoUnref) {\n            this._pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    _onDrain() {\n        this.writeBuffer.splice(0, this._prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this._prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this._getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this._prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    _getWritablePackets() {\n        const shouldCheckPayloadSize = this._maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this._maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Checks whether the heartbeat timer has expired but the socket has not yet been notified.\n     *\n     * Note: this method is private for now because it does not really fit the WebSocket API, but if we put it in the\n     * `write()` method then the message would not be buffered by the Socket.IO client.\n     *\n     * @return {boolean}\n     * @private\n     */\n    /* private */ _hasPingExpired() {\n        if (!this._pingTimeoutTime)\n            return true;\n        const hasExpired = Date.now() > this._pingTimeoutTime;\n        if (hasExpired) {\n            this._pingTimeoutTime = 0;\n            nextTick(() => {\n                this._onClose(\"ping timeout\");\n            }, this.setTimeoutFn);\n        }\n        return hasExpired;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a message. Alias of {@link Socket#write}.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    send(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    _sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this._onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    _onError(err) {\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        if (this.opts.tryAllTransports &&\n            this.transports.length > 1 &&\n            this.readyState === \"opening\") {\n            this.transports.shift();\n            return this._open();\n        }\n        this.emitReserved(\"error\", err);\n        this._onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    _onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this._pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (withEventListeners) {\n                if (this._beforeunloadEventListener) {\n                    removeEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n                }\n                if (this._offlineEventListener) {\n                    const i = OFFLINE_EVENT_LISTENERS.indexOf(this._offlineEventListener);\n                    if (i !== -1) {\n                        OFFLINE_EVENT_LISTENERS.splice(i, 1);\n                    }\n                }\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this._prevBufferLen = 0;\n        }\n    }\n}\nSocketWithoutUpgrade.protocol = protocol;\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see Socket\n */\nexport class SocketWithUpgrade extends SocketWithoutUpgrade {\n    constructor() {\n        super(...arguments);\n        this._upgrades = [];\n    }\n    onOpen() {\n        super.onOpen();\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            for (let i = 0; i < this._upgrades.length; i++) {\n                this._probe(this._upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    _probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    SocketWithoutUpgrade.priorWebsocketSuccess =\n                        \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this._upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    onHandshake(data) {\n        this._upgrades = this._filterUpgrades(data.upgrades);\n        super.onHandshake(data);\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    _filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        for (let i = 0; i < upgrades.length; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * @example\n * import { Socket } from \"engine.io-client\";\n *\n * const socket = new Socket();\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see SocketWithUpgrade\n */\nexport class Socket extends SocketWithUpgrade {\n    constructor(uri, opts = {}) {\n        const o = typeof uri === \"object\" ? uri : opts;\n        if (!o.transports ||\n            (o.transports && typeof o.transports[0] === \"string\")) {\n            o.transports = (o.transports || [\"polling\", \"websocket\", \"webtransport\"])\n                .map((transportName) => DEFAULT_TRANSPORTS[transportName])\n                .filter((t) => !!t);\n        }\n        super(uri, o);\n    }\n}\n","import { Polling } from \"./polling.js\";\n/**\n * HTTP long-polling based on the built-in `fetch()` method.\n *\n * Usage: browser, Node.js (since v18), Deno, Bun\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/fetch\n * @see https://caniuse.com/fetch\n * @see https://nodejs.org/api/globals.html#fetch\n */\nexport class Fetch extends Polling {\n    doPoll() {\n        this._fetch()\n            .then((res) => {\n            if (!res.ok) {\n                return this.onError(\"fetch read error\", res.status, res);\n            }\n            res.text().then((data) => this.onData(data));\n        })\n            .catch((err) => {\n            this.onError(\"fetch read error\", err);\n        });\n    }\n    doWrite(data, callback) {\n        this._fetch(data)\n            .then((res) => {\n            if (!res.ok) {\n                return this.onError(\"fetch write error\", res.status, res);\n            }\n            callback();\n        })\n            .catch((err) => {\n            this.onError(\"fetch write error\", err);\n        });\n    }\n    _fetch(data) {\n        var _a;\n        const isPost = data !== undefined;\n        const headers = new Headers(this.opts.extraHeaders);\n        if (isPost) {\n            headers.set(\"content-type\", \"text/plain;charset=UTF-8\");\n        }\n        (_a = this.socket._cookieJar) === null || _a === void 0 ? void 0 : _a.appendCookies(headers);\n        return fetch(this.uri(), {\n            method: isPost ? \"POST\" : \"GET\",\n            body: isPost ? data : null,\n            headers,\n            credentials: this.opts.withCredentials ? \"include\" : \"omit\",\n        }).then((res) => {\n            var _a;\n            // @ts-ignore getSetCookie() was added in Node.js v19.7.0\n            (_a = this.socket._cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(res.headers.getSetCookie());\n            return res;\n        });\n    }\n}\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport { SocketWithoutUpgrade, SocketWithUpgrade, } from \"./socket.js\";\nexport const protocol = Socket.protocol;\nexport { Transport, TransportError } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./globals.node.js\";\nexport { Fetch } from \"./transports/polling-fetch.js\";\nexport { XHR as NodeXHR } from \"./transports/polling-xhr.node.js\";\nexport { XHR } from \"./transports/polling-xhr.js\";\nexport { WS as NodeWebSocket } from \"./transports/websocket.node.js\";\nexport { WS as WebSocket } from \"./transports/websocket.js\";\nexport { WT as WebTransport } from \"./transports/webtransport.js\";\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        /**\n         * A map containing acknowledgement handlers.\n         *\n         * The `withError` attribute is used to differentiate handlers that accept an error as first argument:\n         *\n         * - `socket.emit(\"test\", (err, value) => { ... })` with `ackTimeout` option\n         * - `socket.timeout(5000).emit(\"test\", (err, value) => { ... })`\n         * - `const value = await socket.emitWithAck(\"test\")`\n         *\n         * From those that don't:\n         *\n         * - `socket.emit(\"test\", (value) => { ... });`\n         *\n         * In the first case, the handlers will be called with an error when:\n         *\n         * - the timeout is reached\n         * - the socket gets disconnected\n         *\n         * In the second case, the handlers will be simply discarded upon disconnection, since the client will never receive\n         * an acknowledgement from the server.\n         *\n         * @private\n         */\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        var _a, _b, _c;\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = (_b = (_a = this.io.engine) === null || _a === void 0 ? void 0 : _a.transport) === null || _b === void 0 ? void 0 : _b.writable;\n        const isConnected = this.connected && !((_c = this.io.engine) === null || _c === void 0 ? void 0 : _c._hasPingExpired());\n        const discardPacket = this.flags.volatile && !isTransportWritable;\n        if (discardPacket) {\n        }\n        else if (isConnected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        const fn = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, args);\n        };\n        fn.withError = true;\n        this.acks[id] = fn;\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        return new Promise((resolve, reject) => {\n            const fn = (arg1, arg2) => {\n                return arg1 ? reject(arg1) : resolve(arg2);\n            };\n            fn.withError = true;\n            args.push(fn);\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n        this._clearAcks();\n    }\n    /**\n     * Clears the acknowledgement handlers upon disconnection, since the client will never receive an acknowledgement from\n     * the server.\n     *\n     * @private\n     */\n    _clearAcks() {\n        Object.keys(this.acks).forEach((id) => {\n            const isBuffered = this.sendBuffer.some((packet) => String(packet.id) === id);\n            if (!isBuffered) {\n                // note: handlers that do not accept an error as first argument are ignored here\n                const ack = this.acks[id];\n                delete this.acks[id];\n                if (ack.withError) {\n                    ack.call(this, new Error(\"socket has been disconnected\"));\n                }\n            }\n        });\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowledgement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (typeof ack !== \"function\") {\n            return;\n        }\n        delete this.acks[packet.id];\n        // @ts-ignore FIXME ack is incorrectly inferred as 'never'\n        if (ack.withError) {\n            packet.data.unshift(null);\n        }\n        // @ts-ignore\n        ack.apply(this, packet.data);\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        if (!v) {\n            this.skipReconnect = true;\n        }\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), \n        // @ts-ignore\n        on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called when:\n     *\n     * - the low-level engine is closed\n     * - the parser encountered a badly formatted packet\n     * - all sockets are disconnected\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        var _a;\n        this.cleanup();\n        (_a = this.engine) === null || _a === void 0 ? void 0 : _a.close();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\nexport { Fetch, NodeXHR, XHR, NodeWebSocket, WebSocket, WebTransport, } from \"engine.io-client\";\n","var WORKER_ENABLED = !!(global === global.window && global.URL && global.Blob && global.Worker);\n\nfunction InlineWorker(func, self) {\n  var _this = this;\n  var functionBody;\n\n  self = self || {};\n\n  if (WORKER_ENABLED) {\n    functionBody = func.toString().trim().match(\n      /^function\\s*\\w*\\s*\\([\\w\\s,]*\\)\\s*{([\\w\\W]*?)}$/\n    )[1];\n\n    return new global.Worker(global.URL.createObjectURL(\n      new global.Blob([ functionBody ], { type: \"text/javascript\" })\n    ));\n  }\n\n  function postMessage(data) {\n    setTimeout(function() {\n      _this.onmessage({ data: data });\n    }, 0);\n  }\n\n  this.self = self;\n  this.self.postMessage = postMessage;\n\n  setTimeout(func.bind(self, self), 0);\n}\n\nInlineWorker.prototype.postMessage = function postMessage(data) {\n  var _this = this;\n\n  setTimeout(function() {\n    _this.self.onmessage({ data: data });\n  }, 0);\n};\n\nmodule.exports = InlineWorker;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /* eslint-disable */\n/**\n * License (MIT)\n *\n * Copyright © 2013 Matt Diamond\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n */\n\n\nvar _inlineWorker = require('inline-worker');\n\nvar _inlineWorker2 = _interopRequireDefault(_inlineWorker);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar defaultConfig = {\n  bufferLen: 4096,\n  numChannels: 2,\n  mimeType: 'audio/wav'\n};\n\nvar Microphone = function () {\n  function Microphone(source, config) {\n    var _this = this;\n\n    _classCallCheck(this, Microphone);\n\n    this.config = Object.assign({}, defaultConfig, config);\n\n    this.recording = false;\n\n    this.callbacks = {\n      getBuffer: [],\n      exportWAV: []\n    };\n\n    this.context = source.context;\n    this.node = (this.context.createScriptProcessor || this.context.createJavaScriptNode).call(this.context, this.config.bufferLen, this.config.numChannels, this.config.numChannels);\n\n    this.node.onaudioprocess = function (e) {\n      if (!_this.recording) return;\n\n      var buffer = [];\n      for (var channel = 0; channel < _this.config.numChannels; channel++) {\n        buffer.push(e.inputBuffer.getChannelData(channel));\n      }\n      _this.worker.postMessage({\n        command: 'record',\n        buffer: buffer\n      });\n    };\n\n    source.connect(this.node);\n    this.node.connect(this.context.destination); //this should not be necessary\n\n    var self = {};\n    this.worker = new _inlineWorker2.default(function () {\n      var recLength = 0,\n          recBuffers = [],\n          sampleRate = void 0,\n          numChannels = void 0;\n\n      this.onmessage = function (e) {\n        switch (e.data.command) {\n          case 'init':\n            init(e.data.config);\n            break;\n          case 'record':\n            record(e.data.buffer);\n            break;\n          case 'exportWAV':\n            exportWAV(e.data.type);\n            break;\n          case 'getBuffer':\n            getBuffer();\n            break;\n          case 'clear':\n            clear();\n            break;\n        }\n      };\n\n      function init(config) {\n        sampleRate = config.sampleRate;\n        numChannels = config.numChannels;\n        initBuffers();\n      }\n\n      function record(inputBuffer) {\n        for (var channel = 0; channel < numChannels; channel++) {\n          recBuffers[channel].push(inputBuffer[channel]);\n        }\n        recLength += inputBuffer[0].length;\n      }\n\n      function exportWAV(type) {\n        var buffers = [];\n        for (var channel = 0; channel < numChannels; channel++) {\n          buffers.push(mergeBuffers(recBuffers[channel], recLength));\n        }\n        var interleaved = void 0;\n        if (numChannels === 2) {\n          interleaved = interleave(buffers[0], buffers[1]);\n        } else {\n          interleaved = buffers[0];\n        }\n        var dataview = encodeWAV(interleaved);\n        var audioBlob = new Blob([dataview], { type: type });\n\n        this.postMessage({ command: 'exportWAV', data: audioBlob });\n      }\n\n      function getBuffer() {\n        var buffers = [];\n        for (var channel = 0; channel < numChannels; channel++) {\n          buffers.push(mergeBuffers(recBuffers[channel], recLength));\n        }\n        this.postMessage({ command: 'getBuffer', data: buffers });\n      }\n\n      function clear() {\n        recLength = 0;\n        recBuffers = [];\n        initBuffers();\n      }\n\n      function initBuffers() {\n        for (var channel = 0; channel < numChannels; channel++) {\n          recBuffers[channel] = [];\n        }\n      }\n\n      function mergeBuffers(recBuffers, recLength) {\n        var result = new Float32Array(recLength);\n        var offset = 0;\n        for (var i = 0; i < recBuffers.length; i++) {\n          result.set(recBuffers[i], offset);\n          offset += recBuffers[i].length;\n        }\n        return result;\n      }\n\n      function interleave(inputL, inputR) {\n        var length = inputL.length + inputR.length;\n        var result = new Float32Array(length);\n\n        var index = 0,\n            inputIndex = 0;\n\n        while (index < length) {\n          result[index++] = inputL[inputIndex];\n          result[index++] = inputR[inputIndex];\n          inputIndex++;\n        }\n        return result;\n      }\n\n      function floatTo16BitPCM(output, offset, input) {\n        for (var i = 0; i < input.length; i++, offset += 2) {\n          var s = Math.max(-1, Math.min(1, input[i]));\n          output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\n        }\n      }\n\n      function writeString(view, offset, string) {\n        for (var i = 0; i < string.length; i += 1) {\n          view.setUint8(offset + i, string.charCodeAt(i));\n        }\n      }\n\n      function encodeWAV(samples) {\n        var buffer = new ArrayBuffer(44 + samples.length * 2);\n        var view = new DataView(buffer);\n\n        /* RIFF identifier */\n        writeString(view, 0, 'RIFF');\n        /* RIFF chunk length */\n        view.setUint32(4, 36 + samples.length * 2, true);\n        /* RIFF type */\n        writeString(view, 8, 'WAVE');\n        /* format chunk identifier */\n        writeString(view, 12, 'fmt ');\n        /* format chunk length */\n        view.setUint32(16, 16, true);\n        /* sample format (raw) */\n        view.setUint16(20, 1, true);\n        /* channel count */\n        view.setUint16(22, numChannels, true);\n        /* sample rate */\n        view.setUint32(24, sampleRate, true);\n        /* byte rate (sample rate * block align) */\n        view.setUint32(28, sampleRate * 4, true);\n        /* block align (channel count * bytes per sample) */\n        view.setUint16(32, numChannels * 2, true);\n        /* bits per sample */\n        view.setUint16(34, 16, true);\n        /* data chunk identifier */\n        writeString(view, 36, 'data');\n        /* data chunk length */\n        view.setUint32(40, samples.length * 2, true);\n\n        floatTo16BitPCM(view, 44, samples);\n\n        return view;\n      }\n    }, self);\n\n    this.worker.postMessage({\n      command: 'init',\n      config: {\n        sampleRate: this.context.sampleRate,\n        numChannels: this.config.numChannels\n      }\n    });\n\n    this.worker.onmessage = function (e) {\n      var cb = _this.callbacks[e.data.command].pop();\n      if (typeof cb === 'function') {\n        cb(e.data.data);\n      }\n    };\n  }\n\n  _createClass(Microphone, [{\n    key: 'record',\n    value: function record() {\n      this.recording = true;\n    }\n  }, {\n    key: 'stop',\n    value: function stop() {\n      this.recording = false;\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      this.worker.postMessage({ command: 'clear' });\n    }\n  }, {\n    key: 'getBuffer',\n    value: function getBuffer(cb) {\n      cb = cb || this.config.callback;\n\n      if (!cb) throw new Error('Callback not set');\n\n      this.callbacks.getBuffer.push(cb);\n\n      this.worker.postMessage({ command: 'getBuffer' });\n    }\n  }, {\n    key: 'exportWAV',\n    value: function exportWAV(cb, mimeType) {\n      mimeType = mimeType || this.config.mimeType;\n      cb = cb || this.config.callback;\n\n      if (!cb) throw new Error('Callback not set');\n\n      this.callbacks.exportWAV.push(cb);\n\n      this.worker.postMessage({\n        command: 'exportWAV',\n        type: mimeType\n      });\n    }\n  }]);\n\n  return Microphone;\n}();\n\nMicrophone.forceDownload = function forceDownload(blob, filename) {\n  var a = document.createElement('a');\n\n  a.style = 'display: none';\n  document.body.appendChild(a);\n\n  var url = window.URL.createObjectURL(blob);\n\n  a.href = url;\n  a.download = filename;\n  a.click();\n\n  window.URL.revokeObjectURL(url);\n\n  document.body.removeChild(a);\n};\n\nexports.default = Microphone;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _microphone = require('./microphone');\n\nvar _microphone2 = _interopRequireDefault(_microphone);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar defaultConfig = {\n  nFrequencyBars: 255,\n  onAnalysed: null\n};\n\nvar Recorder = function () {\n  function Recorder(audioContext) {\n    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Recorder);\n\n    this.config = Object.assign({}, defaultConfig, config);\n\n    this.audioContext = audioContext;\n    this.audioInput = null;\n    this.realAudioInput = null;\n    this.inputPoint = null;\n    this.audioRecorder = null;\n    this.rafID = null;\n    this.analyserContext = null;\n    this.recIndex = 0;\n    this.stream = null;\n\n    this.updateAnalysers = this.updateAnalysers.bind(this);\n  }\n\n  _createClass(Recorder, [{\n    key: 'init',\n    value: function init(stream) {\n      var _this = this;\n\n      return new Promise(function (resolve) {\n        _this.inputPoint = _this.audioContext.createGain();\n\n        _this.stream = stream;\n\n        _this.realAudioInput = _this.audioContext.createMediaStreamSource(stream);\n        _this.audioInput = _this.realAudioInput;\n        _this.audioInput.connect(_this.inputPoint);\n\n        _this.analyserNode = _this.audioContext.createAnalyser();\n        _this.analyserNode.fftSize = 2048;\n        _this.inputPoint.connect(_this.analyserNode);\n\n        _this.audioRecorder = new _microphone2.default(_this.inputPoint);\n\n        var zeroGain = _this.audioContext.createGain();\n        zeroGain.gain.value = 0.0;\n\n        _this.inputPoint.connect(zeroGain);\n        zeroGain.connect(_this.audioContext.destination);\n\n        _this.updateAnalysers();\n\n        resolve();\n      });\n    }\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this2.audioRecorder) {\n          reject('Not currently recording');\n          return;\n        }\n\n        _this2.audioRecorder.clear();\n        _this2.audioRecorder.record();\n\n        resolve(_this2.stream);\n      });\n    }\n  }, {\n    key: 'stop',\n    value: function stop() {\n      var _this3 = this;\n\n      return new Promise(function (resolve) {\n        _this3.audioRecorder.stop();\n\n        _this3.audioRecorder.getBuffer(function (buffer) {\n          _this3.audioRecorder.exportWAV(function (blob) {\n            return resolve({ buffer: buffer, blob: blob });\n          });\n        });\n      });\n    }\n  }, {\n    key: 'updateAnalysers',\n    value: function updateAnalysers() {\n      if (this.config.onAnalysed) {\n        requestAnimationFrame(this.updateAnalysers);\n\n        var freqByteData = new Uint8Array(this.analyserNode.frequencyBinCount);\n\n        this.analyserNode.getByteFrequencyData(freqByteData);\n\n        var data = new Array(255);\n        var lastNonZero = 0;\n        var datum = void 0;\n\n        for (var idx = 0; idx < 255; idx += 1) {\n          datum = Math.floor(freqByteData[idx]) - Math.floor(freqByteData[idx]) % 5;\n\n          if (datum !== 0) {\n            lastNonZero = idx;\n          }\n\n          data[idx] = datum;\n        }\n\n        this.config.onAnalysed({ data: data, lineTo: lastNonZero });\n      }\n    }\n  }, {\n    key: 'setOnAnalysed',\n    value: function setOnAnalysed(handler) {\n      this.config.onAnalysed = handler;\n    }\n  }]);\n\n  return Recorder;\n}();\n\nRecorder.download = function download(blob) {\n  var filename = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'audio';\n\n  _microphone2.default.forceDownload(blob, filename + '.wav');\n};\n\nexports.default = Recorder;","module.exports = require('./lib/index.js');\n","import { io } from \"socket.io-client\";\nimport Recorder from \"recorder-js\";\n\nconst socket = io();\n\n// Create the audio context and the recorder instance\nlet audioContext = new (window.AudioContext || window.webkitAudioContext)();\nlet recorder = new Recorder(audioContext, {\n    onAnalysed: data => {\n        console.log('Analysing audio data:', data);\n    }\n});\n\n// Monitor silence (threshold in dB)\nlet silenceThreshold = -30;\nlet silenceTimeout;\nconst silenceDuration = 2000; // 2 seconds\nlet isRecording = false;\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    const voiceButton = document.getElementById('voice-button');\n\n    if (!voiceButton) {\n        console.error('Voice button not found');\n        return;\n    }\n\n    voiceButton.addEventListener('click', () => {\n        console.log('Voice button clicked');\n\n        // Start the audio context if suspended\n        if (audioContext.state === 'suspended') {\n            audioContext.resume().then(() => {\n                console.log('AudioContext resumed');\n            });\n        }\n\n        // Access the microphone\n        navigator.mediaDevices.getUserMedia({ audio: true })\n            .then(stream => {\n                recorder.init(stream);\n                startRecording();\n            })\n            .catch(error => {\n                console.error('Error accessing the microphone', error);\n            });\n    });\n});\n\n// Start recording\nfunction startRecording() {\n    recorder.start()\n        .then(() => {\n            console.log('Recording started');\n            isRecording = true;\n            monitorSilence();\n        })\n        .catch(error => {\n            console.error('Failed to start recording:', error);\n        });\n}\n\n// Stop recording and handle the data\nfunction stopRecording() {\n    recorder.stop()\n        .then(({ blob }) => {\n            console.log('Recording stopped, processing data...');\n            const reader = new FileReader();\n\n            reader.onloadend = () => {\n                const audioBuffer = reader.result;\n                console.log('Audio buffer size:', audioBuffer.byteLength);\n\n                // Send audioBuffer to server via WebSocket\n                socket.emit('audioMessage', audioBuffer);\n                console.log('Audio buffer sent to server:', audioBuffer);\n            };\n\n            reader.readAsArrayBuffer(blob); // Convert blob to ArrayBuffer\n        })\n        .catch(error => {\n            console.error('Failed to stop recording:', error);\n        });\n}\n\n// Monitor for silence and auto-stop recording\nfunction monitorSilence() {\n    recorder.analyse()\n        .then(data => {\n            const average = data.reduce((sum, value) => sum + value, 0) / data.length;\n            const decibels = 20 * Math.log10(average / 255);\n\n            if (decibels < silenceThreshold && isRecording) {\n                if (!silenceTimeout) {\n                    silenceTimeout = setTimeout(() => {\n                        stopRecording();\n                        silenceTimeout = null;\n                    }, silenceDuration);\n                }\n            } else {\n                clearTimeout(silenceTimeout);\n                silenceTimeout = null;\n            }\n\n            if (isRecording) {\n                requestAnimationFrame(monitorSilence); // Continue monitoring\n            }\n        });\n}\n\n// Listen for bot's audio response from the server\nsocket.on('botMessage', (audioBase64) => {\n    const audio = new Audio(`data:audio/mp3;base64,${audioBase64}`);\n    audio.play();\n    appendMessage(`Agent: [Audio Response]`);\n});\n\n// Append messages to the chat window\nfunction appendMessage(message) {\n    const messageElement = document.createElement('div');\n    messageElement.textContent = message;\n    document.getElementById('messages').appendChild(messageElement);\n}\n"]}